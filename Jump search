#include <iostream>
#include <cmath> // Para a função sqrt
using namespace std;

int jumpSearch(const int* arr, int size, int target) {
    int step = sqrt(size);
    int prev = 0;

    while (arr[min(step, size) - 1] < target) {
        prev = step; // Move para o próximo bloco
        step += sqrt(size); // Incrementa o salto

        if (prev >= size) {
            return -1; // Alvo não encontrado
        }
    }

    for (int i = prev; i < min(step, size); i++) {
        if (arr[i] == target) {
            return i; // Alvo encontrado
        }
    }

    return -1; // Alvo não encontrado
}

int main() {
    const int arr[] = {3, 6, 8, 12, 15, 18, 22, 25, 30, 35};
    const int size = sizeof(arr) / sizeof(arr[0]);
    const int target = 18;

    const int result = jumpSearch(arr, size, target);

    if (result != -1) {
        cout << "Elemento " << target << " encontrado no índice " << result << endl;
    } else {
        cout << "Elemento " << target << " não encontrado" << endl;
    }

    return 0;
}
